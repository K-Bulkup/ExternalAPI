plugins {
    id 'java'
    id 'war' // 웹 애플리케이션으로 빌드

}

group 'com.example'
version '1.0-SNAPSHOT'
sourceCompatibility = '17' // 또는 사용하려는 JDK 버전에 맞춤 (예: '11', '17')

repositories {
    mavenCentral()
}

dependencies {
    // Spring Core 및 웹 관련
    implementation 'org.springframework:spring-context:5.3.30'
    implementation 'org.springframework:spring-webmvc:5.3.30' // DispatcherServlet 및 MVC 기능
    implementation 'org.springframework:spring-jdbc:5.3.30' // JDBC 및 트랜잭션 관리

    // 데이터베이스 드라이버 (MySQL 예시)
    implementation 'mysql:mysql-connector-java:8.0.33'

    // 데이터베이스 커넥션 풀 (DBCP2 예시)
    implementation 'org.apache.commons:commons-dbcp2:2.9.0'

    // MyBatis
    implementation 'org.mybatis:mybatis:3.5.16'
    implementation 'org.mybatis:mybatis-spring:3.0.3' // Spring과 MyBatis 연동

    implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310'

    // Spring Security
    implementation 'org.springframework.security:spring-security-web:5.7.11'
    implementation 'org.springframework.security:spring-security-config:5.7.11'
    implementation 'org.springframework.security:spring-security-core:5.7.11'

    // JWT 라이브러리
    implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'
    implementation 'io.jsonwebtoken:jjwt-jackson:0.11.5'

    // Spring - Redis 통신이 가능하게 함
    // https://mvnrepository.com/artifact/org.springframework.data/spring-data-redis
    implementation 'org.springframework.data:spring-data-redis:3.3.4'

    // Lettuce : Redis 클라이언트 라이브러리, Redis를 사용할 수 있는 Java 코드 제공
    // https://mvnrepository.com/artifact/io.lettuce/lettuce-core
    implementation 'io.lettuce:lettuce-core:6.4.0.RELEASE'

    // JSP/Servlet 관련 (Tomcat 같은 WAS가 제공하므로 providedCompile)
    providedCompile 'javax.servlet:javax.servlet-api:4.0.1'
    providedCompile 'javax.servlet.jsp:javax.servlet.jsp-api:2.3.3'
    implementation 'javax.servlet:jstl:1.2' // JSP에서 JSTL 태그 라이브러리 사용

    // 로깅 (SLF4J + Logback으로 간소화)
    implementation 'org.slf4j:slf4j-api:1.7.36'
    implementation 'ch.qos.logback:logback-classic:1.2.11'

    // Lombok (선택 사항: DTO/VO 개발 시 getter/setter 자동 생성 편의)
    compileOnly 'org.projectlombok:lombok:1.18.30'
    annotationProcessor 'org.projectlombok:lombok:1.18.30'

    // 테스트 관련 (필요 없으면 삭제 가능)
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.10.0'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.10.0'
}

// WAR 파일 이름 설정 (선택 사항)
war {
    archiveFileName = "${project.name}.war"
    webAppDirectory = file('src/main/webapp')
}

test {
    useJUnitPlatform()
}